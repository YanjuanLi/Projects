/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.ElderRole;

import Business.Employee.Doctor;
import Business.Employee.NursingWorker;
import Business.Enterprise.NursingHouse;
import Business.NHSystem;
import Business.Network.Network;
import Business.Notification.Notification;
import Business.Notification.NotificationDirectory;
import Business.UserAccount.ElderAccount;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import org.jb2011.lnf.beautyeye.ch3_button.BEButtonUI;

/**
 *
 * @author Surface book
 */
public class uncomfortableSign extends javax.swing.JFrame {

    /**
     * Creates new form uncomfortableSign
     */
    public static Doctor doctor;
    private static NHSystem system;
    private static ElderAccount elderAccount;
    
   
    public uncomfortableSign(NHSystem system,ElderAccount elderAccount) {
        initComponents();
        setSize(1000, 800);
        setLocation(220,40);
        foot.setUI(new BEButtonUI().setNormalColor(BEButtonUI.NormalColor.normal));
        head.setUI(new BEButtonUI().setNormalColor(BEButtonUI.NormalColor.normal));
        heart.setUI(new BEButtonUI().setNormalColor(BEButtonUI.NormalColor.normal));
        inChest.setUI(new BEButtonUI().setNormalColor(BEButtonUI.NormalColor.normal));
        jButton1.setUI(new BEButtonUI().setNormalColor(BEButtonUI.NormalColor.normal));
        leg_arthosis.setUI(new BEButtonUI().setNormalColor(BEButtonUI.NormalColor.normal));
        muscle.setUI(new BEButtonUI().setNormalColor(BEButtonUI.NormalColor.normal));

        


        this.system=system;
        this.elderAccount=elderAccount;
        
        
    }
    
    public void CloseFrame(){
        super.dispose();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        head = new javax.swing.JButton();
        foot = new javax.swing.JButton();
        inChest = new javax.swing.JButton();
        heart = new javax.swing.JButton();
        leg_arthosis = new javax.swing.JButton();
        muscle = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jButton1.setText("back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon("/LJ的文件/Neu/Main20180902/5100+lab/NetBeansProjects/db4odemo_midterm6/res/bodyPic.jpg")); // NOI18N

        head.setText("Head");
        head.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                headActionPerformed(evt);
            }
        });

        foot.setText("foot");
        foot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                footActionPerformed(evt);
            }
        });

        inChest.setText("In Chest");
        inChest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inChestActionPerformed(evt);
            }
        });

        heart.setText("Heart");
        heart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                heartActionPerformed(evt);
            }
        });

        leg_arthosis.setText("leg/arthosis");
        leg_arthosis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leg_arthosisActionPerformed(evt);
            }
        });

        muscle.setText("muscle");
        muscle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                muscleActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jLabel2.setText("Giving the doctor a rough idea of what's wrong with you.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(140, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(head, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(heart, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(leg_arthosis, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(foot, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(muscle, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(inChest, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(105, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(63, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(muscle, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inChest, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(foot, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(head, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(heart, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(leg_arthosis, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(6, 6, 6)))
                .addGap(1487, 1487, 1487))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        CloseFrame();
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void headActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_headActionPerformed
        // TODO add your handling code here:
        int ID=elderAccount.getElder().getId();//老人id
        String name =elderAccount.getElder().getName();//老人姓名
        //int receiverID=elderAccount.getElder().getNursingWorkerId();//接受者id
        String content="Head Issues";//内容
        //String Name=null;//接受者姓名
        
       
        ArrayList<Doctor> receiverList = new ArrayList();
        
         for(Network network:system.getNetworkList()){
            for(NursingHouse nh:network.getNursingHouseDirectory().getNursingHouseList()){
                for(Doctor doctor:nh.getDoctorDirectory().getDoctorList()){
                          if(doctor.getDepartment().equals("Head")){
                             receiverList.add(doctor);
                          }
                }
            }
         }
        
        String receiverIdentity="Doctor";//接受者身份
        String senderIdentity="Elder";//发送者身份
        for(Network network:system.getNetworkList()){
            for(NursingHouse nh:network.getNursingHouseDirectory().getNursingHouseList()){
                if(nh.getName().equals(elderAccount.getElder().getNursingHouse())){
                   nh.getNotificationDirectory().createNotification(content, receiverList, receiverIdentity, name, senderIdentity);
                }
            }
        }
        
        

        JOptionPane.showMessageDialog(null, "Head issues message Sent!");
    }//GEN-LAST:event_headActionPerformed

    private void heartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_heartActionPerformed
        // TODO add your handling code here:
       int ID=elderAccount.getElder().getId();//老人id
        String name =elderAccount.getElder().getName();//老人姓名
        int receiverID=elderAccount.getElder().getNursingWorkerId();//接受者id
        String content="Heart Issues";//内容
        String Name=null;//接受者姓名
         
        ArrayList<Doctor> receiverList = new ArrayList();
        
         for(Network network:system.getNetworkList()){
            for(NursingHouse nh:network.getNursingHouseDirectory().getNursingHouseList()){
                for(Doctor doctor:nh.getDoctorDirectory().getDoctorList()){
                          if(doctor.getDepartment().equals("Heart")){
                             receiverList.add(doctor);
                          }
                }
            }
         }
        
        String receiverIdentity="Doctor";//接受者身份
        String senderIdentity="Elder";//发送者身份
        for(Network network:system.getNetworkList()){
            for(NursingHouse nh:network.getNursingHouseDirectory().getNursingHouseList()){
                if(nh.getName().equals(elderAccount.getElder().getNursingHouse())){
                   nh.getNotificationDirectory().createNotification(content, receiverList, receiverIdentity, name,  senderIdentity);
                }
            }
        }
        
        

        JOptionPane.showMessageDialog(null, "Heart issues message Sent!");
    }//GEN-LAST:event_heartActionPerformed

    private void leg_arthosisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leg_arthosisActionPerformed
        // TODO add your handling code here:
        int ID=elderAccount.getElder().getId();
        String name =elderAccount.getElder().getName();
        int receiverID=elderAccount.getElder().getNursingWorkerId();
        String content="Leg Issues";
        String Name=null;
        
        ArrayList<Doctor> receiverList = new ArrayList();
        
         for(Network network:system.getNetworkList()){
            for(NursingHouse nh:network.getNursingHouseDirectory().getNursingHouseList()){
                for(Doctor doctor:nh.getDoctorDirectory().getDoctorList()){
                          if(doctor.getDepartment().equals("Leg")){
                             receiverList.add(doctor);
                          }
                }
            }
         }
        String receiverIdentity="Doctor";
        String senderIdentity="Elder";
        
        for(Network network:system.getNetworkList()){
            for(NursingHouse nh:network.getNursingHouseDirectory().getNursingHouseList()){
                if(nh.getName().equals(elderAccount.getElder().getNursingHouse())){
                   nh.getNotificationDirectory().createNotification(content, receiverList, receiverIdentity, name,  senderIdentity);
                }
            }
        }
        

        JOptionPane.showMessageDialog(null, "Leg issues message Sent!");
    }//GEN-LAST:event_leg_arthosisActionPerformed

    private void inChestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inChestActionPerformed
        // TODO add your handling code here:
        int ID=elderAccount.getElder().getId();//老人id
        String name =elderAccount.getElder().getName();//老人姓名
        int receiverID=elderAccount.getElder().getNursingWorkerId();//接受者id
        String content="Chest Issues";//内容
        String Name=null;//接受者姓名
         
        ArrayList<Doctor> receiverList = new ArrayList();
        
         for(Network network:system.getNetworkList()){
            for(NursingHouse nh:network.getNursingHouseDirectory().getNursingHouseList()){
                for(Doctor doctor:nh.getDoctorDirectory().getDoctorList()){
                          if(doctor.getDepartment().equals("Chest")){
                             receiverList.add(doctor);
                          }
                }
            }
         }
        
        String receiverIdentity="Doctor";//接受者身份
        String senderIdentity="Elder";//发送者身份
        for(Network network:system.getNetworkList()){
            for(NursingHouse nh:network.getNursingHouseDirectory().getNursingHouseList()){
                if(nh.getName().equals(elderAccount.getElder().getNursingHouse())){
                   nh.getNotificationDirectory().createNotification(content, receiverList, receiverIdentity, name, senderIdentity);
                }
            }
        }
        
        

        JOptionPane.showMessageDialog(null, "Chest issues message Sent!");
    }//GEN-LAST:event_inChestActionPerformed

    private void muscleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_muscleActionPerformed
        // TODO add your handling code here:
        int ID=elderAccount.getElder().getId();
        String name =elderAccount.getElder().getName();
        int receiverID=elderAccount.getElder().getNursingWorkerId();
        String content="Muscle Issues";
        String Name=null;
        
        ArrayList<Doctor> receiverList = new ArrayList();
        
         for(Network network:system.getNetworkList()){
            for(NursingHouse nh:network.getNursingHouseDirectory().getNursingHouseList()){
                for(Doctor doctor:nh.getDoctorDirectory().getDoctorList()){
                          if(doctor.getDepartment().equals("Muscle")){
                             receiverList.add(doctor);
                          }
                }
            }
         }
        String receiverIdentity="Doctor";
        String senderIdentity="Elder";
        
       for(Network network:system.getNetworkList()){
            for(NursingHouse nh:network.getNursingHouseDirectory().getNursingHouseList()){
                if(nh.getName().equals(elderAccount.getElder().getNursingHouse())){
                   nh.getNotificationDirectory().createNotification(content, receiverList, receiverIdentity, name,  senderIdentity);
                }
            }
        }
        

        JOptionPane.showMessageDialog(null, "Muscle issues message Sent!");
    }//GEN-LAST:event_muscleActionPerformed

    private void footActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_footActionPerformed
        // TODO add your handling code here:
        int ID=elderAccount.getElder().getId();
        String name =elderAccount.getElder().getName();
        int receiverID=elderAccount.getElder().getNursingWorkerId();
        String content="Foot Issues";
        String Name=null;

        ArrayList<Doctor> receiverList = new ArrayList();

        for(Network network:system.getNetworkList()){
            for(NursingHouse nh:network.getNursingHouseDirectory().getNursingHouseList()){
                for(Doctor doctor:nh.getDoctorDirectory().getDoctorList()){
                    if(doctor.getDepartment().equals("Foot")){
                        receiverList.add(doctor);
                    }
                }
            }
        }
        String receiverIdentity="Doctor";
        String senderIdentity="Elder";

        for(Network network:system.getNetworkList()){
            for(NursingHouse nh:network.getNursingHouseDirectory().getNursingHouseList()){
                if(nh.getName().equals(elderAccount.getElder().getNursingHouse())){
                   nh.getNotificationDirectory().createNotification(content, receiverList, receiverIdentity, name,  senderIdentity);
                }
            }
        }

        JOptionPane.showMessageDialog(null, "Foot issues message Sent!");
    }//GEN-LAST:event_footActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(uncomfortableSign.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(uncomfortableSign.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(uncomfortableSign.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(uncomfortableSign.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new uncomfortableSign(system,elderAccount).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton foot;
    private javax.swing.JButton head;
    private javax.swing.JButton heart;
    private javax.swing.JButton inChest;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton leg_arthosis;
    private javax.swing.JButton muscle;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.AdministratorRole;

import Business.Enterprise.NursingHouse;
import Business.NHSystem;
import Business.Network.Network;
import Business.Notification.Notification;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.jb2011.lnf.beautyeye.ch3_button.BEButtonUI;

/**
 *
 * @author cuijingyi
 */
public class AnalysisJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AnalysisJPanel
     */
    private JPanel container;
    private NHSystem system;
    private String network;
    public AnalysisJPanel(JPanel container,NHSystem system,String network) {
        initComponents();
        btnBack1.setUI(new BEButtonUI().setNormalColor(BEButtonUI.NormalColor.lightBlue));
        btnCount.setUI(new BEButtonUI().setNormalColor(BEButtonUI.NormalColor.green));
        this.container = container;
        this.system = system;
        this.network = network;
        populateAnalysisTable();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
     private void populateAnalysisTable() {
        DefaultTableModel model = (DefaultTableModel) tblAnalysis.getModel();

        model.setRowCount(0);
        for(Network n: system.getNetworkList()){
            
            if(n.getName().equals(network)){
                //System.out.println("Here");
            for(NursingHouse nursingHouse : n.getNursingHouseDirectory().getNursingHouseList()){
                
                
                      Object[] row = new Object[7];
                      row[0] = nursingHouse.getName();
                      row[1] = getIssueNum("Head Issues",nursingHouse.getName());
                      row[2] = getIssueNum("Heart Issues",nursingHouse.getName());
                      row[3] = getIssueNum("Muscle Issues",nursingHouse.getName());
                      row[4] = getIssueNum("Chest Issues",nursingHouse.getName());
                      row[5] = getIssueNum("Leg Issues",nursingHouse.getName());
                      row[6] = getIssueNum("Foot Issues",nursingHouse.getName());
                
                      model.addRow(row);
           
         
        }
       } 
     }
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnBack1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAnalysis = new javax.swing.JTable();
        btnCount = new javax.swing.JButton();
        txtCount = new javax.swing.JTextField();

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Analysis");

        btnBack1.setText("<<Back");
        btnBack1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack1ActionPerformed(evt);
            }
        });

        tblAnalysis.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Nursing House  Name", "Head Issues", "Heart Issues", "Muscle Issues", "Chest Issues", "Leg Issues", "Foot Issues"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblAnalysis);
        if (tblAnalysis.getColumnModel().getColumnCount() > 0) {
            tblAnalysis.getColumnModel().getColumn(0).setResizable(false);
            tblAnalysis.getColumnModel().getColumn(0).setPreferredWidth(150);
            tblAnalysis.getColumnModel().getColumn(1).setResizable(false);
            tblAnalysis.getColumnModel().getColumn(2).setResizable(false);
            tblAnalysis.getColumnModel().getColumn(3).setResizable(false);
            tblAnalysis.getColumnModel().getColumn(3).setPreferredWidth(100);
            tblAnalysis.getColumnModel().getColumn(4).setResizable(false);
            tblAnalysis.getColumnModel().getColumn(5).setResizable(false);
            tblAnalysis.getColumnModel().getColumn(6).setResizable(false);
        }

        btnCount.setText("Count");
        btnCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCountActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(btnBack1)
                        .addGap(208, 208, 208)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 679, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnCount, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(txtCount, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(87, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(btnBack1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCount, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCount, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(244, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
      private int getIssueNum(String issue, String s){
        int count=0;
        for(Network network: system.getNetworkList()){
          
            for(NursingHouse nursingHouse : network.getNursingHouseDirectory().getNursingHouseList()){
                if(nursingHouse.getName().equals(s)){
               for(Notification n: nursingHouse.getNotificationDirectory().getNotificationList()){
                   if(n == null){
                       return 0;
                   }
                    else if(issue.equals(n.getContent())){
                   count++;
            }
           }
          }
            }
        }
        return count;
    }
    
    private void btnBack1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack1ActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        CardLayout cardlayout = (CardLayout) container.getLayout();
        cardlayout.previous(container);
    }//GEN-LAST:event_btnBack1ActionPerformed

    private void btnCountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCountActionPerformed
        // TODO add your handling code here:
         int total =0;
       for(Network n: system.getNetworkList()){
          if(n.getName() == network ){
               for(NursingHouse nh:n.getNursingHouseDirectory().getNursingHouseList()){
                 int u1=0;               
                 u1= getIssueNum("Head Issues",nh.getName()) +
                     getIssueNum("Heart Issues",nh.getName())+
                     getIssueNum("Muscle Issues",nh.getName())+
                     getIssueNum("Chest Issues",nh.getName())+
                     getIssueNum("Leg Issues",nh.getName())+
                     getIssueNum("Foot Issues",nh.getName());
                total = total + u1;   
        }
            n.setUncomfortableAmount(total);
       txtCount.setText(String.valueOf(n.getUncomfortableAmount()));
       }
          // n.setUncomfortableAmount(total);
           // txtCount.setText(String.valueOf(n.getUncomfortableAmount()));
       }
           
           
    }//GEN-LAST:event_btnCountActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack1;
    private javax.swing.JButton btnCount;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblAnalysis;
    private javax.swing.JTextField txtCount;
    // End of variables declaration//GEN-END:variables
}

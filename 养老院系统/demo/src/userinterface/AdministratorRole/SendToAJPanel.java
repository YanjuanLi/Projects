/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.AdministratorRole;

import Business.Administrator.Administrator;
import Business.Elder.Elder;
import Business.Employee.Doctor;
import Business.Employee.NursingWorker;
import Business.Enterprise.NursingHouse;
import Business.NHSystem;
import Business.Network.Network;
import Business.UserAccount.AdministratorAccount;
import java.awt.CardLayout;
import java.awt.event.ItemEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.jb2011.lnf.beautyeye.ch3_button.BEButtonUI;

/**
 *
 * @author cuijingyi
 */
public class SendToAJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SendToAllJPanel
     */
    private JPanel container;
    private String s;
    private String receiverIdentity;
    private AdministratorAccount aa;
    private NHSystem system;
   
    public SendToAJPanel(JPanel container,String s, String receiverIdentity,AdministratorAccount aa,NHSystem system) {
        initComponents();
        btnBack.setUI(new BEButtonUI().setNormalColor(BEButtonUI.NormalColor.lightBlue));
        btnClear.setUI(new BEButtonUI().setNormalColor(BEButtonUI.NormalColor.red));
        btnSend.setUI(new BEButtonUI().setNormalColor(BEButtonUI.NormalColor.green));
        this.container = container;
        this.s = s;
        this.receiverIdentity = receiverIdentity;
        this.aa = aa; 
        this.system = system;
        txtNH.setText(s);
        txtNH.setText(s);
        txtNH.setEditable(false);
        //txtReceiver.setEditable(false);
        populate();
        txtSender.setText(aa.getAdministrator().getName());
        txtSender.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void populate(){
    if(receiverIdentity.equals("Elder")){
            lblTitle.setText("Send to an elder");
            for(Network network:system.getNetworkList()){
                for(NursingHouse nursingHouse:network.getNursingHouseDirectory().getNursingHouseList()){
                    if(nursingHouse.getName().equals(s)){
                        for(Elder e:nursingHouse.getElderDirectory().getElderList()){
                            idCombox.addItem(e);
                        }
                    }
                }
            }
        }else if(receiverIdentity.equals("Doctor")){
            lblTitle.setText("Send to a Doctor");
             for(Network network:system.getNetworkList()){
                for(NursingHouse nursingHouse:network.getNursingHouseDirectory().getNursingHouseList()){
                    if(nursingHouse.getName().equals(s)){
                        for(Doctor d:nursingHouse.getDoctorDirectory().getDoctorList()){
                            idCombox.addItem(d);
                            
                        }
                    }
                }
            }
        }else if(receiverIdentity.equals("Nursing Worker")){
            lblTitle.setText("Send to a Nursing Worker");
             for(Network network:system.getNetworkList()){
                for(NursingHouse nursingHouse:network.getNursingHouseDirectory().getNursingHouseList()){
                    if(nursingHouse.getName().equals(s)){
                        for(NursingWorker nw:nursingHouse.getNursingWorkerDirectory().getNursingWorkerList()){
                            idCombox.addItem(nw);
                        }
                    }
                }
            }
        }else {
            return;
        }
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtSender = new javax.swing.JTextField();
        btnClear = new javax.swing.JButton();
        btnSend = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtNH = new javax.swing.JTextField();
        idCombox = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMessage = new javax.swing.JTextArea();

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblTitle.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lblTitle.setText("Send  To  ");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setText("Sender:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setText("Receiver:");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel4.setText("Message:");

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnSend.setText("Send");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setText("Nursing House:");

        idCombox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                idComboxItemStateChanged(evt);
            }
        });

        txtMessage.setColumns(20);
        txtMessage.setRows(5);
        jScrollPane1.setViewportView(txtMessage);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(229, 229, 229)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4))
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtSender, javax.swing.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE)
                                    .addComponent(idCombox, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(265, 265, 265)
                        .addComponent(btnClear)
                        .addGap(106, 106, 106)
                        .addComponent(btnSend))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack)
                        .addGap(117, 117, 117)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(txtNH, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(301, 301, 301)
                        .addComponent(lblTitle)))
                .addContainerGap(174, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtNH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(7, 7, 7)
                .addComponent(lblTitle)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtSender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(idCombox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClear)
                    .addComponent(btnSend))
                .addContainerGap(343, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        CardLayout cardlayout = (CardLayout) container.getLayout();
        cardlayout.previous(container);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        // TODO add your handling code here:
        if(txtMessage.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Please fill all blanks first!");
        }else{
        int senderId =aa.getAdministrator().getId();
        String senderIdentity = "Administrator";
        String sender = aa.getAdministrator().getName();
        //int receiverId = Integer.parseInt(txtReceiver.getText());
        
        String message = txtMessage.getText();
       
        
        ArrayList<Elder> elderList = new ArrayList();
        ArrayList<NursingWorker> nwList = new ArrayList();
        ArrayList<Doctor> doctorList = new ArrayList();
        
        
        for(Network network:system.getNetworkList()){
            for(NursingHouse nh : network.getNursingHouseDirectory().getNursingHouseList()){
                if(nh.getName().equals(s)){
                if(receiverIdentity.equals("Elder")){
                    Elder elder = (Elder)idCombox.getSelectedItem();
                 for(Elder e: nh.getElderDirectory().getElderList()){
                    if(e==elder){
                      elderList.add(e);
                      nh.getNotificationDirectory().createNotification(message, elderList, receiverIdentity, sender, senderIdentity);
                      JOptionPane.showMessageDialog(null, "Send notification successfully!");
                      //txtReceiver.setText("");
                      txtMessage.setText("");
            }
        }
                }else if(receiverIdentity.equals("Nursing Worker")){
                    NursingWorker nursingWorker = (NursingWorker)idCombox.getSelectedItem();
                     for(NursingWorker nw: nh.getNursingWorkerDirectory().getNursingWorkerList()){
                       if(nw==nursingWorker){
                            nwList.add(nw);
                            nh.getNotificationDirectory().createNotification(message, nwList, receiverIdentity, sender, senderIdentity);
                            JOptionPane.showMessageDialog(null, "Send notification successfully!");
                            //txtReceiver.setText("");
                            txtMessage.setText("");
                            
            }
        }
                }else if(receiverIdentity.equals("Doctor")){
                    Doctor doctor = (Doctor)idCombox.getSelectedItem();
                     for(Doctor d: nh.getDoctorDirectory().getDoctorList()){
                       if(d==doctor){
                            doctorList.add(d);
                            nh.getNotificationDirectory().createNotification(message, doctorList, receiverIdentity, sender, senderIdentity);
                            JOptionPane.showMessageDialog(null, "Send notification successfully!");
                            //txtReceiver.setText("");
                            txtMessage.setText("");
                       } 
                     } 
               }
            }
        }
        }     
        }
    }//GEN-LAST:event_btnSendActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        //txtReceiver.setText("");
        txtMessage.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    private void idComboxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_idComboxItemStateChanged
        // TODO add your handling code here:
        if(evt.getStateChange()==ItemEvent.SELECTED){
            
            
        }
    }//GEN-LAST:event_idComboxItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnSend;
    private javax.swing.JComboBox idCombox;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextArea txtMessage;
    private javax.swing.JTextField txtNH;
    private javax.swing.JTextField txtSender;
    // End of variables declaration//GEN-END:variables
}

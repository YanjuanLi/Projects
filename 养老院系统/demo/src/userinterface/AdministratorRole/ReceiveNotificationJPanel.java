/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.AdministratorRole;

import Business.Enterprise.NursingHouse;
import Business.NHSystem;
import Business.Network.Network;
import Business.Notification.Notification;
import Business.UserAccount.AdministratorAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.jb2011.lnf.beautyeye.ch3_button.BEButtonUI;

/**
 *
 * @author cuijingyi
 */
public class ReceiveNotificationJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ReceiveNotificationJPanel
     */
    private JPanel container;
    private NHSystem system;
    private String s;
    private AdministratorAccount aa;
    public ReceiveNotificationJPanel(JPanel container, NHSystem system, String s, AdministratorAccount aa) {
        initComponents();
        btnBack.setUI(new BEButtonUI().setNormalColor(BEButtonUI.NormalColor.lightBlue));
        jButton1.setUI(new BEButtonUI().setNormalColor(BEButtonUI.NormalColor.green));
        this.container = container;
        this.system = system;
        this.s = s;
        this.aa =aa;
        txtNH.setText(s);
        txtNH.setEditable(false);
        populateNotificationTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void populateNotificationTable() {
        
      DefaultTableModel dtm = (DefaultTableModel)tblRN.getModel();
        dtm.setRowCount(0);
        for(Network network:system.getNetworkList()){
             
            for(NursingHouse nh:network.getNursingHouseDirectory().getNursingHouseList()){
                if(nh.getName().equals(s)){
                    
                for(Notification n:nh.getNotificationDirectory().getNotificationList()){
                    
                 if(n.getReceiverIdentity().equals("Administrator")){
                     
                    for(int i=0;i<n.getReceiverList().size();i++){
                        if(n.getReceiverList().get(i)==aa.getAdministrator()){
                              Object[] row = new Object[dtm.getColumnCount()];
                              
                              row[0] = n;
                              row[1] = n.getSenderIdentity();
                              row[2]=n.getContent();
            
                              dtm.addRow(row);
                        }
                    }
            }
                }
            }
            }
        }
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRN = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtNH = new javax.swing.JTextField();

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        tblRN.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Sender", "Sender Identity", "Content"
            }
        ));
        jScrollPane1.setViewportView(tblRN);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Received   Notification");

        jButton1.setText("Delete Notification");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("Nursing House:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(btnBack)
                        .addGap(90, 90, 90)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNH, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(277, 277, 277)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(164, 164, 164)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(182, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(jLabel2)
                    .addComponent(txtNH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jButton1)
                .addContainerGap(227, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        CardLayout cardlayout = (CardLayout) container.getLayout();
        cardlayout.previous(container);
    }//GEN-LAST:event_btnBackActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblRN.getSelectedRow();
        if(selectedRow>=0){
            int selectionResult = JOptionPane.showConfirmDialog(null,"Are you sure to delete this elder?");
            if(selectionResult == JOptionPane.YES_OPTION){
                Notification notification = (Notification)tblRN.getValueAt(selectedRow, 0);
                for(Network network:system.getNetworkList()){
                    for(NursingHouse nh:network.getNursingHouseDirectory().getNursingHouseList()){
                        if(nh.getName().equals(s)){
                            nh.getNotificationDirectory().deleteNotification(notification);
                        }
                        
                    }
                }
                
                populateNotificationTable();
            }
        }else{
             JOptionPane.showMessageDialog(null, "Please select a notification!");
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblRN;
    private javax.swing.JTextField txtNH;
    // End of variables declaration//GEN-END:variables
}

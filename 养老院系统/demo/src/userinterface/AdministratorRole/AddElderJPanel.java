/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.AdministratorRole;

import Business.Administrator.Administrator;
import Business.Bed.Bed;
import Business.Elder.Elder;
import Business.Elder.ElderChildren;
import Business.Employee.NursingWorker;
import Business.Enterprise.NursingHouse;
import Business.NHSystem;
import Business.Network.Network;
import Business.UserAccount.ElderAccount;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.jb2011.lnf.beautyeye.ch3_button.BEButtonUI;

/**
 *
 * @author cuijingyi
 */
public class AddElderJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AddElderJPanel
     */
    private JPanel container;
    private NHSystem system;
    private String s;
    private Elder elder;
    private ArrayList<ElderChildren> elderChildrenList;
    public AddElderJPanel(JPanel container, NHSystem system,String s) {
        elder=new Elder();
        initComponents();
        addContact.setUI(new BEButtonUI().setNormalColor(BEButtonUI.NormalColor.green));
        DeleteContact.setUI(new BEButtonUI().setNormalColor(BEButtonUI.NormalColor.red));
        btnBack.setUI(new BEButtonUI().setNormalColor(BEButtonUI.NormalColor.lightBlue));
        btnCreate.setUI(new BEButtonUI().setNormalColor(BEButtonUI.NormalColor.lightBlue));
        
        
        this.container = container;
        this.system = system;
        this.s = s;
        txtNH.setText(s);
        txtNH.setEditable(false);
        elderChildrenList = new ArrayList();
        populateCombox();
      
    }
    
    private void populateTable() {
         DefaultTableModel model = (DefaultTableModel) contactTable.getModel();
        model.setRowCount(0);
        
        for(ElderChildren ec: elderChildrenList){
                          Object[] row = new Object[3];
                          row[0] = ec.getChildName();
                          row[1] = ec.getChildIdentity();
                          row[2] = ec.getChildPhoneNumber();                      
                          model.addRow(row);
        }
       
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void populateCombox(){
        for(Network network: system.getNetworkList()){
            for(NursingHouse nursingHouse : network.getNursingHouseDirectory().getNursingHouseList()){
                if(nursingHouse.getName().equals(s)){
                  for(NursingWorker nursingWorker : nursingHouse.getNursingWorkerDirectory().getNursingWorkerList()){
                           cbbNWID.addItem(nursingWorker.getName());
                }
              }
            }
        }
       for(Network network: system.getNetworkList()){
            for(NursingHouse nursingHouse : network.getNursingHouseDirectory().getNursingHouseList()){
                if(nursingHouse.getName().equals(s)){
                  for(Bed bed : nursingHouse.getBedList().getBedList()){
                          if(bed.getElderName().equals("Unknown")){
                           cbbBedNumber.addItem(bed.getBedId());
                          }
                }
              }
            }
        }
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtGender = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtHA = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        btnCreate = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtNH = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cbbNWID = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        txtCN = new javax.swing.JTextField();
        txtCI = new javax.swing.JTextField();
        txtCP = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cbbBedNumber = new javax.swing.JComboBox();
        txtPW = new javax.swing.JPasswordField();
        jScrollPane1 = new javax.swing.JScrollPane();
        contactTable = new javax.swing.JTable();
        addContact = new javax.swing.JButton();
        DeleteContact = new javax.swing.JButton();

        lblTitle.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lblTitle.setText("Add   New  Elder");

        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setText("Name:");

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel4.setText("Gender:");

        txtGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGenderActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel5.setText("Home Address:");

        txtHA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHAActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel7.setText("Age:");

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel10.setText("Password:");

        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Nursing House:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setText("Nursing Worker Name:");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel11.setText("Create Contact Person:");

        jLabel12.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel12.setText("Contact Identity:");

        jLabel16.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel16.setText("Contact Name:");

        jLabel18.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel18.setText("Contact Phone Number:");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel6.setText("Bed Number:");

        cbbBedNumber.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentMoved(java.awt.event.ComponentEvent evt) {
                cbbBedNumberComponentMoved(evt);
            }
        });
        cbbBedNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbBedNumberActionPerformed(evt);
            }
        });

        contactTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Identity", "PhoneNum"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(contactTable);
        if (contactTable.getColumnModel().getColumnCount() > 0) {
            contactTable.getColumnModel().getColumn(0).setResizable(false);
            contactTable.getColumnModel().getColumn(1).setResizable(false);
            contactTable.getColumnModel().getColumn(2).setResizable(false);
            contactTable.getColumnModel().getColumn(2).setPreferredWidth(150);
        }

        addContact.setText("Add Contact Person");
        addContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addContactActionPerformed(evt);
            }
        });

        DeleteContact.setText("Delete Contact Person");
        DeleteContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteContactActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(65, 65, 65)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCI, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCP, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(addContact, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addGap(78, 78, 78)
                                .addComponent(txtCN, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(DeleteContact, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(316, 316, 316)
                .addComponent(lblTitle)
                .addGap(0, 308, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(298, 298, 298))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(btnBack)
                        .addGap(97, 97, 97)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtNH, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtHA, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel10)
                                    .addGap(79, 79, 79)
                                    .addComponent(txtPW, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtGender, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel11)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel6))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(cbbBedNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cbbNWID, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(489, 489, 489)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(jLabel1)
                    .addComponent(txtNH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addComponent(lblTitle)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtHA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPW, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbbNWID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cbbBedNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(jLabel11)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(txtCN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(txtCI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(txtCP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addContact)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DeleteContact))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(172, 172, 172))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        int cur = container.getComponentCount();
        ManageEldersJPanel me = (ManageEldersJPanel)container.getComponent(cur-1);
        me.refreshData();
        CardLayout cardlayout = (CardLayout) container.getLayout();
        cardlayout.previous(container);
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void txtGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGenderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGenderActionPerformed

    private void txtHAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHAActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:
        try{
        for(Network network: system.getNetworkList()){
            for(NursingHouse nursingHouse : network.getNursingHouseDirectory().getNursingHouseList()){ 
               if(nursingHouse.getName().equals(s)){
                   if(txtName.getText().equals("") || txtAge.getText().equals("")|| txtGender.getText().equals("")||txtHA.getText().equals("")
                            ||  txtPW.getPassword().equals("") ){
                        JOptionPane.showMessageDialog(null,"Please fill all blanks first");}
                    else
                   if(nursingHouse.getDoctorAccountDirectory().checkIfUsernameIsUnique(txtName.getText())==true
                         &&nursingHouse.getAdministratorAccountDirectory().checkIfUsernameIsUnique(txtName.getText())==true
                         &&nursingHouse.getElderAccountDirectory().checkIfUsernameIsUnique(txtName.getText())==true
                         &&nursingHouse.getNursingWorkerAccountDirectory().checkIfUsernameIsUnique(txtName.getText())==true){ 
                       if(Integer.parseInt(txtAge.getText())<60|| Integer.parseInt(txtAge.getText())>120){
                              JOptionPane.showMessageDialog(null,"The age random of doctor shoule between 60 and 120"); 
                           }else{
                 elder = nursingHouse.getElderDirectory().addElder() ;
                 elder.setName(txtName.getText());
                 int age = Integer.parseInt(txtAge.getText());
                 elder.setAge(Integer.parseInt(txtAge.getText()));   
                 elder.setGender(txtGender.getText());
                 elder.setHomeAddress(txtHA.getText());
                 elder.setPassword(String.valueOf(txtPW.getPassword()));                 
                 elder.setNursingWorkerName((String)cbbNWID.getSelectedItem());                 
                 elder.setBedId((Integer)cbbBedNumber.getSelectedItem());
                 for(int i=0;i<elderChildrenList.size();i++){
                     elder.getChildrenDirectory().addElderChildren(elderChildrenList.get(i));
                 }
                 
                 for(Bed bed: nursingHouse.getBedList().getBedList()){
                     if((Integer)cbbBedNumber.getSelectedItem() == bed.getBedId()){
                         bed.setElderName(elder.getName());
                         bed.setNursingWorkerName(elder.getNursingWorkerName());
                     }
                 }
                 String name = txtName.getText();
                 String password = String.valueOf(txtPW.getPassword());
                 ElderAccount elderAccount = nursingHouse.getElderAccountDirectory().createElder(name, password, elder, null,s);
                  JOptionPane.showMessageDialog(null,"Create elder information successfully!");
                    txtName.setText("");
                 txtAge.setText("");
                 txtGender.setText("");
                 txtHA.setText("");
                 txtPW.setText("");
                 txtCN.setText("");
                 txtCP.setText("");
                 txtCI.setText("");
                 DefaultTableModel model =(DefaultTableModel) contactTable.getModel();
                 while(model.getRowCount()>0){
                 model.removeRow(model.getRowCount()-1);
                 }
            
                 cbbNWID.removeAllItems();
                 cbbBedNumber.removeAllItems();
                 populateCombox();
                       }  }else{
                        JOptionPane.showMessageDialog(null,"The user exists!");
                   }
                }
            }
        }
        
                
                
        }
         catch(NumberFormatException nfe){
           JOptionPane.showMessageDialog(null,"Age Only Numbers allowed");
       }
               
               
                 
        
    }//GEN-LAST:event_btnCreateActionPerformed

    private void cbbBedNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbBedNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbBedNumberActionPerformed

    private void cbbBedNumberComponentMoved(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_cbbBedNumberComponentMoved
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cbbBedNumberComponentMoved

    private void addContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addContactActionPerformed
        // TODO add your handling code here:
       Pattern p = Pattern.compile("^\\d{10}$");
        Matcher m = p.matcher(txtCP.getText());
        boolean b = m.matches();
       if( b == false){
            JOptionPane.showMessageDialog(null, "The form of Phone Number should be 10 digit");
        }else{
        ElderChildren e = new ElderChildren();
        e.setChildIdentity(txtCI.getText());
        e.setChildName(txtCN.getText());
        e.setChildPhoneNumber(Long.valueOf(txtCP.getText()));
        e.setOfWhichElder(txtName.getText());
        elderChildrenList.add(e);
        txtCI.setText("");
        txtCN.setText("");
        txtCP.setText("");
        populateTable(); 
       }
    }//GEN-LAST:event_addContactActionPerformed

    private void DeleteContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteContactActionPerformed
        // TODO add your handling code here:
        int row=contactTable.getSelectedRow();
        String s=(String)contactTable.getValueAt(row, 0);
        for(int i=0;i<elderChildrenList.size();i++){
            if(elderChildrenList.get(i).getChildName().equals(s)){
                elderChildrenList.remove(elderChildrenList.get(i));
            }
        }
        //ElderChildren elderChildren=elder.getChildrenDirectory().whichElderChildren(s);
        //elder.getChildrenDirectory().deleteElderChildren(elderChildren);
        populateTable();
 
    }//GEN-LAST:event_DeleteContactActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DeleteContact;
    private javax.swing.JButton addContact;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreate;
    private javax.swing.JComboBox cbbBedNumber;
    private javax.swing.JComboBox cbbNWID;
    private javax.swing.JTable contactTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtCI;
    private javax.swing.JTextField txtCN;
    private javax.swing.JTextField txtCP;
    private javax.swing.JTextField txtGender;
    private javax.swing.JTextField txtHA;
    private javax.swing.JTextField txtNH;
    private javax.swing.JTextField txtName;
    private javax.swing.JPasswordField txtPW;
    // End of variables declaration//GEN-END:variables
}
